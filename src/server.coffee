express = require("express")
bodyParser = require("body-parser")
oauthServer = require("oauth2-server")

# Express & Body parser
app = express()
app.use bodyParser.urlencoded extended: true
app.use bodyParser.json()

# OAuth server
app.oauth = oauthServer
  model: {}
  grants: ["password", "authorization_code"]
  debug: true
  accessTokenLifetime: 2678400 # number of seconds || null (never expires)
app.use app.oauth.errorHandler()

# Routes
#   Exchange tokens:
app.all "/oauth/token", app.oauth.grant()

#   Handle authorise:
app.post "/oauth/authorise", ((req, res, next) ->
  if not req.session.userId
    return res.redirect "/session?redirect=" + req.path + "client_id=" + req.query.client_id + "&redirect_uri=" + req.query.redirect_uri
  next()
), app.oauth.authCodeGrant((req, next) ->
  # The first param should to indicate an error
  # The second param should a bool to indicate if the user did authorise the app
  # The third param should for the user/uid (only used for passing to saveAuthCode)
  next null, req.body.allow == "yes", req.session.userId, null
)

# ---
# generated by js2coffee 2.0.4

app.get "/", app.oauth.authorise(), (req, res) ->
  res.send "Secret area :O"

# Listen...
app.listen 3000
console.log "Listening at 3000..."

# This is an example app called Lepocamon, and provides an API that
# other apps can use with the OAuth "authorization_code" grant flow.
# The original Lepocamon users use the "password" grant flow for the login.
